#!/usr/bin/env ruby

require 'rubygems'
require 'ginger'
require 'rake'

if ARGV.length == 0
  puts <<-USAGE
ginger #{Ginger::Version::String}
Use ginger to run specs for each scenario defined. Scenarios must be set out in
a file called ginger_scenarios.rb wherever this tool is run. Once they're
defined, then you can run this tool and provide the rake task that would
normally be called.

Examples:
  ginger spec
  ginger test
  ginger spec:models
USAGE
  exit 0
end

def run_scenario(name, ruby_version=nil)
  puts <<-SCENARIO

-------------------
Ginger Scenario: #{name} #{", Ruby " + ruby_version if ruby_version}
-------------------
  SCENARIO
  
  command = "rake #{ARGV.join(" ")}"

  if ruby_version
    system("rvm-prompt use #{ruby_version} && #{command}; rvm-prompt use system")
  else
    system(comand)
  end
end

file_path = File.join Dir.pwd, ".ginger"

File.delete(file_path) if File.exists?(file_path)

scenarios = Ginger::Configuration.instance.scenarios
puts "No Ginger Scenarios defined" if scenarios.empty?

scenarios.each_with_index do |scenario, index|
  File.open('.ginger', 'w') { |f| f.write index.to_s }

  if scenario.ruby_versions.empty?
    run_scenario(scenario.name || index)
  else
    scenario.ruby_versions.each do |version|
      run_scenario(scenario.name || index, version)
    end
  end
end

File.delete(file_path) if File.exists?(file_path)
